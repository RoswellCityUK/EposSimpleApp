/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package EposSimple.Panels;

import EposSimple.EposSimpleApp;
import EposSimple.Helpers.*;
import static EposSimple.Helpers.Files.listFilesFromFolder;
import EposSimple.Models.*;
import EposSimple.Widgets.ProductListWidget;
import java.awt.Color;
import java.io.File;
import java.net.URISyntaxException;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;

/**
 *
 * @author tg
 */
public class ProductManagement extends javax.swing.JPanel {

    private User loggedUser;
    private EposSimpleApp parentFrame;
    private ArrayList<Product> products;
    private Product selectedProduct;
    private ProductListWidget productWidget;

    ArrayList<ProductListWidget> productWidgets = new ArrayList<>();

    /**
     * Creates new form SalesDashboard
     *
     * @param parentFrame
     * @param loggedUser
     * @param products
     */
    public ProductManagement(EposSimpleApp parentFrame, User loggedUser, ArrayList<Product> products) {
        this.loggedUser = loggedUser;
        this.parentFrame = parentFrame;
        this.products = products;
        initComponents();

        for (int i = 0; i < products.size(); i++) {
            productWidgets.add(new ProductListWidget(parentFrame, this, products.get(i)));
            pnlUsersList.add(productWidgets.get(i));
        }
        pnlUsersList.validate();
        pnlUsersList.repaint();

        DragScrollListener listener = new DragScrollListener(pnlUsersList);
        pnlUsersList.addMouseListener(listener);
        pnlUsersList.addMouseMotionListener(listener);

        ArrayList<String> imageFiles = new ArrayList<>();
        try {
            imageFiles = listFilesFromFolder(new File(getClass().getResource("/ProductImages/").toURI()));
        } catch (URISyntaxException en) {

        }
        for (String fileName : imageFiles) {
            cboProductImage.addItem(fileName);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        srllPanel = new CustomScrollPane();
        pnlUsersList = new javax.swing.JPanel();
        pnlRightPanel = new javax.swing.JPanel();
        pnlAligningPane = new javax.swing.JPanel();
        pnlContent = new javax.swing.JPanel();
        lblSelectUserFromList = new javax.swing.JLabel();
        pnlSelectedProduct = new javax.swing.JPanel();
        lblProductName = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        lblProductPrice = new javax.swing.JLabel();
        txtProductPrice = new javax.swing.JTextField();
        lblProductImage = new javax.swing.JLabel();
        btnProductImage = new javax.swing.JButton();
        lblProductImageChange = new javax.swing.JLabel();
        cboProductImage = new javax.swing.JComboBox<>();
        pnlButtons = new javax.swing.JPanel();
        btnReset = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(BorderFactory.createMatteBorder(1, 0, 0, 0, Color.BLACK));
        setMaximumSize(new java.awt.Dimension(1260, 626));
        setMinimumSize(new java.awt.Dimension(1260, 626));
        setPreferredSize(new java.awt.Dimension(1260, 626));
        setLayout(new java.awt.GridBagLayout());

        srllPanel.setBackground(new java.awt.Color(255, 255, 255));
        srllPanel.setBorder(null);
        srllPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        srllPanel.setPreferredSize(new java.awt.Dimension(314, 604));

        pnlUsersList.setBackground(new java.awt.Color(255, 255, 255));
        pnlUsersList.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        pnlUsersList.setLayout(new javax.swing.BoxLayout(pnlUsersList, javax.swing.BoxLayout.PAGE_AXIS));
        srllPanel.setViewportView(pnlUsersList);

        add(srllPanel, new java.awt.GridBagConstraints());

        pnlRightPanel.setBackground(new java.awt.Color(255, 255, 255));
        pnlRightPanel.setPreferredSize(new java.awt.Dimension(930, 604));
        pnlRightPanel.setLayout(new javax.swing.BoxLayout(pnlRightPanel, javax.swing.BoxLayout.PAGE_AXIS));

        pnlAligningPane.setLayout(new javax.swing.BoxLayout(pnlAligningPane, javax.swing.BoxLayout.LINE_AXIS));

        pnlContent.setBackground(new java.awt.Color(255, 255, 255));
        pnlContent.setLayout(new java.awt.GridBagLayout());

        lblSelectUserFromList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSelectUserFromList.setForeground(new java.awt.Color(204, 204, 204));
        lblSelectUserFromList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSelectUserFromList.setText("Select Product from the list on the left hand size.");
        lblSelectUserFromList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlContent.add(lblSelectUserFromList, gridBagConstraints);

        pnlSelectedProduct.setBackground(new java.awt.Color(255, 255, 255));
        pnlSelectedProduct.setMinimumSize(new java.awt.Dimension(293, 262));
        pnlSelectedProduct.setLayout(new java.awt.GridBagLayout());

        lblProductName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblProductName.setText("Product name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSelectedProduct.add(lblProductName, gridBagConstraints);

        txtProductName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtProductName.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        pnlSelectedProduct.add(txtProductName, gridBagConstraints);

        lblProductPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblProductPrice.setText("Product price:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSelectedProduct.add(lblProductPrice, gridBagConstraints);

        txtProductPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtProductPrice.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        pnlSelectedProduct.add(txtProductPrice, gridBagConstraints);

        lblProductImage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblProductImage.setText("Product image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSelectedProduct.add(lblProductImage, gridBagConstraints);

        btnProductImage.setBackground(new java.awt.Color(255, 255, 255));
        btnProductImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/bread.png"))); // NOI18N
        btnProductImage.setBorderPainted(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        pnlSelectedProduct.add(btnProductImage, gridBagConstraints);

        lblProductImageChange.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblProductImageChange.setText("Change Image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSelectedProduct.add(lblProductImageChange, gridBagConstraints);

        cboProductImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProductImageActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlSelectedProduct.add(cboProductImage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlContent.add(pnlSelectedProduct, gridBagConstraints);
        pnlSelectedProduct.setVisible(false);

        pnlButtons.setBackground(new java.awt.Color(255, 255, 255));
        pnlButtons.setBorder(javax.swing.BorderFactory.createEmptyBorder(25, 1, 1, 1));
        pnlButtons.setMinimumSize(new java.awt.Dimension(293, 69));
        pnlButtons.setPreferredSize(new java.awt.Dimension(293, 69));
        pnlButtons.setLayout(new java.awt.GridLayout(1, 0));

        btnReset.setBackground(new java.awt.Color(255, 255, 255));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 10, 1));
        btnReset.setBorderPainted(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        pnlButtons.add(btnReset);

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 10, 1));
        btnDelete.setBorderPainted(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        pnlButtons.add(btnDelete);

        btnConfirm.setBackground(new java.awt.Color(255, 255, 255));
        btnConfirm.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.setToolTipText("");
        btnConfirm.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 10, 1));
        btnConfirm.setBorderPainted(false);
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        pnlButtons.add(btnConfirm);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlContent.add(pnlButtons, gridBagConstraints);
        pnlButtons.setVisible(false);

        pnlAligningPane.add(pnlContent);

        pnlRightPanel.add(pnlAligningPane);

        add(pnlRightPanel, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void cboProductImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProductImageActionPerformed
        String productImagePath = (String) cboProductImage.getSelectedItem();
        btnProductImage.setIcon(new ImageIcon(getClass().getResource("/ProductImages/" + productImagePath)));
    }//GEN-LAST:event_cboProductImageActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        boolean validationOk = true;

        if (txtProductName.getText().isBlank()) {
            validationOk = false;
        }
        if (txtProductPrice.getText().isBlank()) {
            validationOk = false;
        }
        if (!tryParseDouble(txtProductPrice.getText())){
            validationOk = false;
        }
        selectedProduct.setName(txtProductName.getText());
        selectedProduct.setPrice(Double.parseDouble(txtProductPrice.getText()));
        selectedProduct.setImagePath((String) cboProductImage.getSelectedItem());
        if(validationOk){
            parentFrame.editProduct(selectedProduct, productWidget);
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        parentFrame.deleteProductFromOffer(selectedProduct);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        selectProduct(this.productWidget, this.selectedProduct);
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnProductImage;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> cboProductImage;
    private javax.swing.JLabel lblProductImage;
    private javax.swing.JLabel lblProductImageChange;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblProductPrice;
    private javax.swing.JLabel lblSelectUserFromList;
    private javax.swing.JPanel pnlAligningPane;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlRightPanel;
    private javax.swing.JPanel pnlSelectedProduct;
    private javax.swing.JPanel pnlUsersList;
    private javax.swing.JScrollPane srllPanel;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtProductPrice;
    // End of variables declaration//GEN-END:variables
   
    private boolean tryParseDouble(String string) {
        try {
            Double.parseDouble(string);
            return true;
        } catch (NumberFormatException en) {
            return false;
        }
    }

    public void selectProduct(ProductListWidget selectedWidget, Product selectedProduct) {
        this.selectedProduct = selectedProduct;
        this.productWidget = selectedWidget;

        for (ProductListWidget widget : productWidgets) {
            widget.deselect();
        }
        selectedWidget.select();

        String productName = selectedProduct.getName();
        txtProductName.setText(productName);

        double productPrice = selectedProduct.getPrice();
        txtProductPrice.setText(String.format("%.2f", productPrice));

        ImageIcon productImage = selectedProduct.getProductIcon(128, 128);
        btnProductImage.setIcon(productImage);

        cboProductImage.setSelectedItem(selectedProduct.getImagePath());

        lblSelectUserFromList.setVisible(false);
        pnlSelectedProduct.setVisible(true);
        pnlButtons.setVisible(true);
    }

}
